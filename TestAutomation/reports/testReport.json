{
  "stats": {
    "suites": 12,
    "tests": 16,
    "passes": 14,
    "pending": 0,
    "failures": 2,
    "start": "2019-09-29T19:18:19.152Z",
    "end": "2019-09-29T19:18:19.231Z",
    "duration": 79,
    "testsRegistered": 16,
    "passPercent": 87.5,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "07946b42-f3d1-4d70-8541-1fd4bd118c82",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a3e9b808-e7fa-4107-afce-03e949f96c4e",
          "title": "#sum()",
          "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-sum.js",
          "file": "/testCasesExecutables/test-sum.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0dc43581-8546-4d3b-b48a-4dc619e2925b",
              "title": "without arguments",
              "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-sum.js",
              "file": "/testCasesExecutables/test-sum.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 0",
                  "fullTitle": "#sum() without arguments should return 0",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(sum()).to.equal(0)",
                  "err": {},
                  "uuid": "4cfa44ca-4a39-4dc9-8fbd-14494ae94e0d",
                  "parentUUID": "0dc43581-8546-4d3b-b48a-4dc619e2925b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4cfa44ca-4a39-4dc9-8fbd-14494ae94e0d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "307dbfb5-9177-47b6-b39c-d8d8520b7711",
              "title": "with number arguments",
              "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-sum.js",
              "file": "/testCasesExecutables/test-sum.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return sum of arguments",
                  "fullTitle": "#sum() with number arguments should return sum of arguments",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(sum(1, 2, 3, 4, 5)).to.equal(15)",
                  "err": {},
                  "uuid": "982457e4-d052-4aff-b824-fa90664ece5c",
                  "parentUUID": "307dbfb5-9177-47b6-b39c-d8d8520b7711",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return argument when only one argument is passed",
                  "fullTitle": "#sum() with number arguments should return argument when only one argument is passed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(sum(5)).to.equal(5)",
                  "err": {},
                  "uuid": "0e4f4e57-4aa4-4375-a13c-c396af10ded4",
                  "parentUUID": "307dbfb5-9177-47b6-b39c-d8d8520b7711",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "982457e4-d052-4aff-b824-fa90664ece5c",
                "0e4f4e57-4aa4-4375-a13c-c396af10ded4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "08e62b88-054b-4c0e-afe6-8210ff5681d6",
              "title": "with non-number arguments",
              "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-sum.js",
              "file": "/testCasesExecutables/test-sum.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should throw error",
                  "fullTitle": "#sum() with non-number arguments should throw error",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(function() {\n  sum(1, 2, '3', [4], 5)\n}).to.throw(TypeError, 'sum() expects only numbers.')",
                  "err": {},
                  "uuid": "17470b46-9526-4d7e-9838-2922f7e5973d",
                  "parentUUID": "08e62b88-054b-4c0e-afe6-8210ff5681d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "17470b46-9526-4d7e-9838-2922f7e5973d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dc2b82d3-955f-4321-afab-9d2f8e577b26",
          "title": "mmolToMgdl(); return int",
          "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-units.js",
          "file": "/testCasesExecutables/test-units.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e068340d-d0d5-4e92-b731-2790212e6a83",
              "title": "with invalid argument type",
              "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-units.js",
              "file": "/testCasesExecutables/test-units.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should throw error",
                  "fullTitle": "mmolToMgdl(); return int with invalid argument type should throw error",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(function() {\n    unit.mmolToMgdl('3')\n  }).to.throw(new TypeError())",
                  "err": {
                    "message": "AssertionError: expected [Function] to throw 'TypeError'",
                    "estack": "AssertionError: expected [Function] to throw 'TypeError'\n    at Context.<anonymous> (testCasesExecutables/test-units.js:14:26)",
                    "diff": null
                  },
                  "uuid": "4ca853a4-cde5-4690-af3b-bafd7714e973",
                  "parentUUID": "e068340d-d0d5-4e92-b731-2790212e6a83",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "4ca853a4-cde5-4690-af3b-bafd7714e973"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "793169c0-4248-4477-a330-e8528fd1c364",
              "title": "with integer argument",
              "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-units.js",
              "file": "/testCasesExecutables/test-units.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should conver 1 to 18",
                  "fullTitle": "mmolToMgdl(); return int with integer argument should conver 1 to 18",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mmolToMgdl(1)).to.equal(18)",
                  "err": {},
                  "uuid": "0a20a82d-9f12-46fe-9843-460e1d10a8c0",
                  "parentUUID": "793169c0-4248-4477-a330-e8528fd1c364",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should convert 2 to 36",
                  "fullTitle": "mmolToMgdl(); return int with integer argument should convert 2 to 36",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mmolToMgdl(2)).to.equal(36)",
                  "err": {},
                  "uuid": "184f4859-d500-40f4-9b8b-8d87919cb0c7",
                  "parentUUID": "793169c0-4248-4477-a330-e8528fd1c364",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0a20a82d-9f12-46fe-9843-460e1d10a8c0",
                "184f4859-d500-40f4-9b8b-8d87919cb0c7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "66110a3f-2ce7-4fba-8e91-a16e7531ed7b",
              "title": "with float argument",
              "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-units.js",
              "file": "/testCasesExecutables/test-units.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should convert 2.5 to 45",
                  "fullTitle": "mmolToMgdl(); return int with float argument should convert 2.5 to 45",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mmolToMgdl(2.5)).to.equal(45)",
                  "err": {},
                  "uuid": "0c62db4c-be55-4303-a2e2-079a10530754",
                  "parentUUID": "66110a3f-2ce7-4fba-8e91-a16e7531ed7b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should convert 1.145 to 21",
                  "fullTitle": "mmolToMgdl(); return int with float argument should convert 1.145 to 21",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mmolToMgdl(1.145)).to.equal(21)",
                  "err": {},
                  "uuid": "b5603354-3929-474e-9aaf-b3e6a07bc087",
                  "parentUUID": "66110a3f-2ce7-4fba-8e91-a16e7531ed7b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should counvert 1.06 to 19",
                  "fullTitle": "mmolToMgdl(); return int with float argument should counvert 1.06 to 19",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mmolToMgdl(1.06)).to.equal(19)",
                  "err": {},
                  "uuid": "335bd340-3493-4f3b-a791-f8525f2b89f8",
                  "parentUUID": "66110a3f-2ce7-4fba-8e91-a16e7531ed7b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0c62db4c-be55-4303-a2e2-079a10530754",
                "b5603354-3929-474e-9aaf-b3e6a07bc087",
                "335bd340-3493-4f3b-a791-f8525f2b89f8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "beee8937-b82a-4001-824b-3d2263048d3b",
          "title": "mgdlToMMOL(); return .1 decimal",
          "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-units.js",
          "file": "/testCasesExecutables/test-units.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "600b804b-d0fe-49e4-a045-a8e53e92a366",
              "title": "with invalid argument type",
              "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-units.js",
              "file": "/testCasesExecutables/test-units.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should throw TypeError",
                  "fullTitle": "mgdlToMMOL(); return .1 decimal with invalid argument type should throw TypeError",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(function() {\n    unit.mgdlToMMOL('3')\n  }).to.throw(new TypeError())",
                  "err": {
                    "message": "AssertionError: expected [Function] to throw 'TypeError'",
                    "estack": "AssertionError: expected [Function] to throw 'TypeError'\n    at Context.<anonymous> (testCasesExecutables/test-units.js:46:26)",
                    "diff": null
                  },
                  "uuid": "7b431ef7-f4e6-43b7-8c86-85ea1f117aba",
                  "parentUUID": "600b804b-d0fe-49e4-a045-a8e53e92a366",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "7b431ef7-f4e6-43b7-8c86-85ea1f117aba"
              ],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ae5f2831-2ac5-4c03-bf1d-407b879cd63e",
              "title": "with integer argument",
              "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-units.js",
              "file": "/testCasesExecutables/test-units.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should conver 18 to '1.0'",
                  "fullTitle": "mgdlToMMOL(); return .1 decimal with integer argument should conver 18 to '1.0'",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mgdlToMMOL(18)).to.equal('1.0')",
                  "err": {},
                  "uuid": "33e4a81c-e349-4827-90b0-0d2dad25d789",
                  "parentUUID": "ae5f2831-2ac5-4c03-bf1d-407b879cd63e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should convert 36 to '1.7'",
                  "fullTitle": "mgdlToMMOL(); return .1 decimal with integer argument should convert 36 to '1.7'",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mgdlToMMOL(135)).to.equal('7.5')",
                  "err": {},
                  "uuid": "a8a38656-f62e-4e1a-b6c0-30d503280bdb",
                  "parentUUID": "ae5f2831-2ac5-4c03-bf1d-407b879cd63e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "33e4a81c-e349-4827-90b0-0d2dad25d789",
                "a8a38656-f62e-4e1a-b6c0-30d503280bdb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0c22b4a4-522e-43a9-9db8-eef280525410",
              "title": "with float argument",
              "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-units.js",
              "file": "/testCasesExecutables/test-units.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should convert 21.3 to '1.2'",
                  "fullTitle": "mgdlToMMOL(); return .1 decimal with float argument should convert 21.3 to '1.2'",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mgdlToMMOL(21.3)).to.equal('1.2')",
                  "err": {},
                  "uuid": "133e9b5f-c50b-467c-a2b2-dfdbb3218606",
                  "parentUUID": "0c22b4a4-522e-43a9-9db8-eef280525410",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should convert 30.01 to '1.7'",
                  "fullTitle": "mgdlToMMOL(); return .1 decimal with float argument should convert 30.01 to '1.7'",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mgdlToMMOL(30.01)).to.equal('1.7')",
                  "err": {},
                  "uuid": "d31d31b8-4ed8-4dc6-bb58-60e056d50a35",
                  "parentUUID": "0c22b4a4-522e-43a9-9db8-eef280525410",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should counvert 1.06 to '0.1'",
                  "fullTitle": "mgdlToMMOL(); return .1 decimal with float argument should counvert 1.06 to '0.1'",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mgdlToMMOL(1.06)).to.equal('0.1')",
                  "err": {},
                  "uuid": "b97fb168-a46f-4b08-8c4d-7ec6a51fc7ce",
                  "parentUUID": "0c22b4a4-522e-43a9-9db8-eef280525410",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "133e9b5f-c50b-467c-a2b2-dfdbb3218606",
                "d31d31b8-4ed8-4dc6-bb58-60e056d50a35",
                "b97fb168-a46f-4b08-8c4d-7ec6a51fc7ce"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testReport",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "testReport"
      },
      "version": "4.0.1"
    }
  }
}