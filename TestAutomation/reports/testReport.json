{
  "stats": {
    "suites": 12,
    "tests": 16,
    "passes": 14,
    "pending": 0,
    "failures": 2,
    "start": "2019-09-29T19:20:48.799Z",
    "end": "2019-09-29T19:20:48.861Z",
    "duration": 62,
    "testsRegistered": 16,
    "passPercent": 87.5,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3d35e361-13bc-4007-90c5-4ad733efefdf",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1d43dcb3-4343-49ab-b441-42305646e098",
          "title": "#sum()",
          "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-sum.js",
          "file": "/testCasesExecutables/test-sum.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2fda110e-910d-4db3-9732-467ec32f0cce",
              "title": "without arguments",
              "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-sum.js",
              "file": "/testCasesExecutables/test-sum.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 0",
                  "fullTitle": "#sum() without arguments should return 0",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(sum()).to.equal(0)",
                  "err": {},
                  "uuid": "35a03551-bd76-4769-8563-5f4003ca9959",
                  "parentUUID": "2fda110e-910d-4db3-9732-467ec32f0cce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "35a03551-bd76-4769-8563-5f4003ca9959"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "43594cdc-7d5c-4022-bd02-e424da97044f",
              "title": "with number arguments",
              "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-sum.js",
              "file": "/testCasesExecutables/test-sum.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return sum of arguments",
                  "fullTitle": "#sum() with number arguments should return sum of arguments",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(sum(1, 2, 3, 4, 5)).to.equal(15)",
                  "err": {},
                  "uuid": "32eeb422-c8e0-4a94-ad21-6faddd584781",
                  "parentUUID": "43594cdc-7d5c-4022-bd02-e424da97044f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return argument when only one argument is passed",
                  "fullTitle": "#sum() with number arguments should return argument when only one argument is passed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(sum(5)).to.equal(5)",
                  "err": {},
                  "uuid": "661ca5ca-10d2-40a0-bf71-00207b1891b2",
                  "parentUUID": "43594cdc-7d5c-4022-bd02-e424da97044f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "32eeb422-c8e0-4a94-ad21-6faddd584781",
                "661ca5ca-10d2-40a0-bf71-00207b1891b2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "23d40b70-250a-49eb-bedf-672cceced69b",
              "title": "with non-number arguments",
              "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-sum.js",
              "file": "/testCasesExecutables/test-sum.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should throw error",
                  "fullTitle": "#sum() with non-number arguments should throw error",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(function() {\n  sum(1, 2, '3', [4], 5)\n}).to.throw(TypeError, 'sum() expects only numbers.')",
                  "err": {},
                  "uuid": "f2c590bb-d299-47dc-a877-ce7c2296a2d1",
                  "parentUUID": "23d40b70-250a-49eb-bedf-672cceced69b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f2c590bb-d299-47dc-a877-ce7c2296a2d1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0ff32ebf-3634-4b99-a50b-969268e1e582",
          "title": "mmolToMgdl(); return int",
          "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-units.js",
          "file": "/testCasesExecutables/test-units.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8ec2875a-6cbe-4c39-9d85-a8d6d99a7ca8",
              "title": "with invalid argument type",
              "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-units.js",
              "file": "/testCasesExecutables/test-units.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should throw error",
                  "fullTitle": "mmolToMgdl(); return int with invalid argument type should throw error",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(function() {\n    unit.mmolToMgdl('3')\n  }).to.throw(new TypeError())",
                  "err": {
                    "message": "AssertionError: expected [Function] to throw 'TypeError'",
                    "estack": "AssertionError: expected [Function] to throw 'TypeError'\n    at Context.<anonymous> (testCasesExecutables/test-units.js:14:26)",
                    "diff": null
                  },
                  "uuid": "1b63d87f-6cc5-4a88-840f-98a7777fd998",
                  "parentUUID": "8ec2875a-6cbe-4c39-9d85-a8d6d99a7ca8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "1b63d87f-6cc5-4a88-840f-98a7777fd998"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c2140e17-7a42-4620-9dac-e2b66df1c013",
              "title": "with integer argument",
              "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-units.js",
              "file": "/testCasesExecutables/test-units.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should conver 1 to 18",
                  "fullTitle": "mmolToMgdl(); return int with integer argument should conver 1 to 18",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mmolToMgdl(1)).to.equal(18)",
                  "err": {},
                  "uuid": "823ae2de-a43f-40eb-ad6a-b47badee965e",
                  "parentUUID": "c2140e17-7a42-4620-9dac-e2b66df1c013",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should convert 2 to 36",
                  "fullTitle": "mmolToMgdl(); return int with integer argument should convert 2 to 36",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mmolToMgdl(2)).to.equal(36)",
                  "err": {},
                  "uuid": "7b3ec181-03d7-4121-bcc9-e37d2e104572",
                  "parentUUID": "c2140e17-7a42-4620-9dac-e2b66df1c013",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "823ae2de-a43f-40eb-ad6a-b47badee965e",
                "7b3ec181-03d7-4121-bcc9-e37d2e104572"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a570c6fb-e978-4a75-8351-16fd17c635a6",
              "title": "with float argument",
              "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-units.js",
              "file": "/testCasesExecutables/test-units.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should convert 2.5 to 45",
                  "fullTitle": "mmolToMgdl(); return int with float argument should convert 2.5 to 45",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mmolToMgdl(2.5)).to.equal(45)",
                  "err": {},
                  "uuid": "7ab7446b-b673-4440-ab38-297d5d546e76",
                  "parentUUID": "a570c6fb-e978-4a75-8351-16fd17c635a6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should convert 1.145 to 21",
                  "fullTitle": "mmolToMgdl(); return int with float argument should convert 1.145 to 21",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mmolToMgdl(1.145)).to.equal(21)",
                  "err": {},
                  "uuid": "6b8b14eb-1902-4898-a2a9-f9da65f7199e",
                  "parentUUID": "a570c6fb-e978-4a75-8351-16fd17c635a6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should counvert 1.06 to 19",
                  "fullTitle": "mmolToMgdl(); return int with float argument should counvert 1.06 to 19",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mmolToMgdl(1.06)).to.equal(19)",
                  "err": {},
                  "uuid": "8c09c736-5446-482f-bce3-d9af115fd804",
                  "parentUUID": "a570c6fb-e978-4a75-8351-16fd17c635a6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7ab7446b-b673-4440-ab38-297d5d546e76",
                "6b8b14eb-1902-4898-a2a9-f9da65f7199e",
                "8c09c736-5446-482f-bce3-d9af115fd804"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ce3c3697-fa94-41e2-840f-9c3b524971ea",
          "title": "mgdlToMMOL(); return .1 decimal",
          "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-units.js",
          "file": "/testCasesExecutables/test-units.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8c7ec1c2-4271-4d79-a989-edfe88ab4741",
              "title": "with invalid argument type",
              "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-units.js",
              "file": "/testCasesExecutables/test-units.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should throw TypeError",
                  "fullTitle": "mgdlToMMOL(); return .1 decimal with invalid argument type should throw TypeError",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(function() {\n    unit.mgdlToMMOL('3')\n  }).to.throw(new TypeError())",
                  "err": {
                    "message": "AssertionError: expected [Function] to throw 'TypeError'",
                    "estack": "AssertionError: expected [Function] to throw 'TypeError'\n    at Context.<anonymous> (testCasesExecutables/test-units.js:46:26)",
                    "diff": null
                  },
                  "uuid": "67699385-3fee-4a3b-927b-3f89e13c95d1",
                  "parentUUID": "8c7ec1c2-4271-4d79-a989-edfe88ab4741",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "67699385-3fee-4a3b-927b-3f89e13c95d1"
              ],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a9c965f8-b59d-4e73-9ca0-f52aabd5b502",
              "title": "with integer argument",
              "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-units.js",
              "file": "/testCasesExecutables/test-units.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should conver 18 to '1.0'",
                  "fullTitle": "mgdlToMMOL(); return .1 decimal with integer argument should conver 18 to '1.0'",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mgdlToMMOL(18)).to.equal('1.0')",
                  "err": {},
                  "uuid": "516826e4-9e6a-4c8e-974a-eb4bad222a06",
                  "parentUUID": "a9c965f8-b59d-4e73-9ca0-f52aabd5b502",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should convert 36 to '1.7'",
                  "fullTitle": "mgdlToMMOL(); return .1 decimal with integer argument should convert 36 to '1.7'",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mgdlToMMOL(135)).to.equal('7.5')",
                  "err": {},
                  "uuid": "e5545a58-4082-431d-8187-a32477e0379f",
                  "parentUUID": "a9c965f8-b59d-4e73-9ca0-f52aabd5b502",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "516826e4-9e6a-4c8e-974a-eb4bad222a06",
                "e5545a58-4082-431d-8187-a32477e0379f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ea6e6ed3-340c-43bf-b7d6-98794a2f871d",
              "title": "with float argument",
              "fullFile": "/mnt/c/project/2-2/TestAutomation/testCasesExecutables/test-units.js",
              "file": "/testCasesExecutables/test-units.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should convert 21.3 to '1.2'",
                  "fullTitle": "mgdlToMMOL(); return .1 decimal with float argument should convert 21.3 to '1.2'",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mgdlToMMOL(21.3)).to.equal('1.2')",
                  "err": {},
                  "uuid": "ae3c5713-ec77-46b0-85ed-5da4bbab48bb",
                  "parentUUID": "ea6e6ed3-340c-43bf-b7d6-98794a2f871d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should convert 30.01 to '1.7'",
                  "fullTitle": "mgdlToMMOL(); return .1 decimal with float argument should convert 30.01 to '1.7'",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mgdlToMMOL(30.01)).to.equal('1.7')",
                  "err": {},
                  "uuid": "528c2f90-24bb-45fa-a474-f0131cb5176c",
                  "parentUUID": "ea6e6ed3-340c-43bf-b7d6-98794a2f871d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should counvert 1.06 to '0.1'",
                  "fullTitle": "mgdlToMMOL(); return .1 decimal with float argument should counvert 1.06 to '0.1'",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(unit.mgdlToMMOL(1.06)).to.equal('0.1')",
                  "err": {},
                  "uuid": "2ee1f651-49c2-4ff0-a4de-6d71461fe633",
                  "parentUUID": "ea6e6ed3-340c-43bf-b7d6-98794a2f871d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ae3c5713-ec77-46b0-85ed-5da4bbab48bb",
                "528c2f90-24bb-45fa-a474-f0131cb5176c",
                "2ee1f651-49c2-4ff0-a4de-6d71461fe633"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testReport",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "testReport"
      },
      "version": "4.0.1"
    }
  }
}